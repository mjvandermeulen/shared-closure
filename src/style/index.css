:root {
  /* start with educated guess, so no far transition will take place init. */
  --answer-height: 50; /* no unit ("px") integer, so you can get the neg value */
  --border: turquoise;
  --focus-color: #e5fbf9;
}

body {
  font-family: "Helvetica", "Arial", sans-serif;
  max-width: 600px;
  margin: auto;
}

button {
  background: transparent;
  font-family: inherit;
  font-size: inherit;
}

button:focus {
  outline: none;
  background-color: var(--focus-color);
}

/* grid */

#challenge .method {
  display: grid;
  grid-template-columns: 2fr repeat(3, 1fr) 2fr;
  grid-template-rows: min-content 1fr min-content; /* LEARN */
  gap: 0; /* STRATEGY: make gaps with margins around cells.
  otherwise the results row will have a gap, even when height is 0 */
}

.cell {
  margin: 10px;
  padding: 10px;
  border: 3px var(--border) solid;
  border-radius: 5px;
}

.method .cell {
  grid-row: 1/4;
}

.method .validation-error.wrapper {
  grid-row: 1/2;
  grid-column: 2/5;
}

.method .inp {
  grid-row: 2/3;
}
.method .ans {
  grid-row: 3/4;
}

/* validation-error */
.method .validation-error.wrapper {
  transition: max-height 2s, opacity 2s;
  overflow: hidden;
  max-height: calc(var(--answer-height) * 1.5 * 1px); /* guess work ****/
  opacity: 1;
}

.method .validation-error.wrapper.collapsed {
  max-height: 0;
  opacity: 0;
}

.method .validation-error .cell {
  border: none;
  padding-bottom: 0;
  margin-bottom: 0;
  color: red;
}

/* show answer transition */
.method .ans.wrapper {
  overflow: hidden;
  /* use * 1.5 for delayed drop down effect */
  /* LEARN **** how to add "px" unit to value */
  transition: max-height 2s, opacity 2s;
  max-height: calc(var(--answer-height) * 1 * 1px);
  opacity: 1;
}

.method .ans.collapsed {
  max-height: 0;
  opacity: 0;
}

.ans .cell {
  transition: transform 2s;
  transform: translateY((0));
}

.method .ans.collapsed .cell {
  transform: translateY(calc(var(--answer-height) * -1 * 1px));
}

.method .inp.cell.incorrect {
  border-color: red;
}

.method .inp.cell.correct {
  border-color: green;
}

/* input */
input[type="text"] {
  border: none;
  outline: none;
  height: 80%;
  width: 100%;
  border-radius: 5px;
}

div.inp:focus-within,
input[type="text"]:focus {
  background-color: var(--focus-color);
}
