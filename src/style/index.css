:root {
  /* *** cut corner: alternative: temp remove transition, after initial measure
  for now: start with educated guess, so no far transition will take place init. */
  --answer-height: 50; /* no unit ("px") integer, so you can get the neg value */
  --focus-color: #e5fbf9;
}

body {
  font-family: "Helvetica", "Arial", sans-serif;
  max-width: 600px;
  margin: auto;
}

button {
  background: transparent;
  font-family: inherit;
  font-size: inherit;
}

.segment {
  border: 3px #bfbfbf solid;
  border-radius: 5px;
  margin: 5px;
}

.cell {
  margin: 5px;
  padding: 5px;
  border: 3px turquoise solid;
  border-radius: 5px;
}

#intro {
  padding: 20px;
  text-align: center;
}

#challenge button:focus {
  outline: none;
  background-color: var(--focus-color);
}

#challenge .method {
  display: grid;
  grid-template-columns: repeat(3, 1fr) 2fr;
  grid-template-rows: min-content min-content 1fr min-content; /* LEARN */
  gap: 0; /* STRATEGY: make gaps with margins around cells.
  otherwise the results row will have a gap, even when height is 0 */
}

#challenge .method .cell {
  grid-row: 1/5;
}

#challenge .method .name {
  grid-row: 1/2;
  grid-column: 1/5;
  border-color: transparent;
  padding: 10px;
  margin: 0;
}

#challenge .method .validation-error.wrapper {
  grid-row: 2/3;
  grid-column: 1/4;
}

#challenge .method .inp {
  grid-row: 3/4;
}
#challenge .method .ans {
  grid-row: 4/5;
}

#challenge .method .check {
  grid-row: 2/5;
}

/* validation-error */
#challenge .method .validation-error.wrapper {
  transition: max-height 2s, opacity 2s;
  overflow: hidden;
  max-height: calc(var(--answer-height) * 1.5 * 1px); /* guess work ****/
  opacity: 1;
}

#challenge .method .validation-error.wrapper.collapsed {
  max-height: 0;
  opacity: 0;
}

#challenge .method .validation-error .cell {
  border: none;
  padding-bottom: 0;
  margin-bottom: 0;
  color: red;
}

/* show answer transition */
#challenge .method .ans.wrapper {
  overflow: hidden;
  /* use * 1.5 for delayed drop down effect */
  /* LEARN **** how to add "px" unit to value */
  transition: max-height 2s, opacity 2s;
  max-height: calc(var(--answer-height) * 1 * 1px);
  opacity: 1;
}

#challenge .method .ans .cell {
  transition: transform 2s;
  transform: translateY((0));
}

#challenge .method .ans.collapsed {
  max-height: 0;
  opacity: 0;
}

#challenge .method .ans.collapsed .cell {
  transform: translateY(calc(var(--answer-height) * -1 * 1px));
}

#challenge .method .inp.cell.incorrect {
  border-color: pink;
  position: relative;
  padding-left: 20px;
}

#challenge .method .inp.cell.incorrect::before {
  content: "";
  background: no-repeat center/80% url("../img/incorrect.png"); /* 2850 Ã— 2850 pixels */
  width: 1em;
  height: 1em;
  position: absolute;
  left: 0.5ch;
}

#challenge .method .inp.cell.correct {
  border-color: #40e08d;
  position: relative;
  padding-left: 20px;
}

#challenge .method .inp.cell.correct::before {
  content: "";
  background: no-repeat center/100% url("../img/correct.png"); /* 512 x 512 px */
  width: 1em;
  height: 1em;
  position: absolute;
  left: 0.5ch;
}

/* input */
input[type="text"] {
  font-family: inherit;
  border: none;
  outline: none;
  /* height: 80%; */
  width: 100%;
  border-radius: 5px;
}

div.inp:focus-within, /* target the whole div with color */
input[type="text"]:focus {
  background-color: var(--focus-color);
}

#code-example pre {
  margin-top: 0;
  margin-bottom: 0;
}

#code-example {
  position: relative; /* needed for child */
}

#code-example .syntax-toggle-wrapper {
  position: absolute;
  height: 100%;
  top: 0;
  right: 0;
}

#code-example .syntax-toggle-wrapper .syntax-toggle {
  position: -webkit-sticky;
  position: sticky; /* make sure no parents have overflow set. note parent height */
  top: 10px;
}

@media only screen and (min-width: 500px) {
  #challenge .method {
    grid-template-columns: 110px repeat(3, 1fr) 2fr;
    grid-template-rows: min-content 1fr min-content; /* LEARN min-content*/
  }
  #challenge .method .cell {
    grid-row: 1/4;
    margin: 10px;
    padding: 10px;
  }

  #challenge .method .name {
    grid-row: 1/4;
    grid-column: 1/2;
  }

  #challenge .method .validation-error.wrapper {
    grid-row: 1/2;
    grid-column: 2/5;
  }

  #challenge .method .inp {
    grid-row: 2/3;
  }
  #challenge .method .ans {
    grid-row: 3/4;
  }

  #challenge .method .check {
    grid-row: 1/4;
  }
}
